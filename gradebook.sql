/* CREATING TABLES */

create table STUDENT (
	STUDENT_ID int NOT NULL,
	FIRST_NAME varchar(50) NOT NULL,
	LAST_NAME varchar(50) NOT NULL,
	MAJOR varchar(20),
	PRIMARY KEY(STUDENT_ID)
);

create table ENROLLMENT (
	STUDENT_ID int NOT NULL,
	COURSE_ID int NOT NULL,
	PRIMARY KEY(STUDENT_ID, COURSE_ID)
);

create table COURSES (
	COURSE_ID int NOT NULL,
	DEPARTMENT varchar(50) NOT NULL,
	COURSE_NUMBER int NOT NULL,
	COURSE_NAME varchar(50) NOT NULL,
	SEMESTER varchar(20) NOT NULL,
	YEAR int NOT NULL,
	PRIMARY KEY(COURSE_ID)
);

create table GRADEBOOK (
	STUDENT_ID int NOT NULL,
	ASSIGNMENT_ID int NOT NULL,
	POINTS int DEFAULT 0 NOT NULL,
PRIMARY KEY(STUDENT_ID, ASSIGNMENT_ID)
); 

create table ASSIGNMENTS (
	ASSIGNMENT_ID int NOT NULL,
	DISTRIBUTION_ID int NOT NULL,
	INSTANCE int NOT NULL,
	POINTS_POSSIBLE int NOT NULL,
	PRIMARY KEY(ASSIGNMENT_ID)
);


create table DISTRIBUTION (
DISTRIBUTION_ID int NOT NULL,
COURSE_ID int NOT NULL,
CATEGORY varchar(50) NOT NULL,
DIST_PERCENT int NOT NULL,
PRIMARY KEY(DISTRIBUTION_ID)
);

/* INSERTING VALUES INTO TABLES */
insert into STUDENT(STUDENT_ID, FIRST_NAME, LAST_NAME, MAJOR)
values(1234, “Mickey”, “Mouse”, “Computer Science”);

insert into STUDENT(STUDENT_ID, FIRST_NAME, LAST_NAME, MAJOR)
values(2468, “Minnie”, “Mouse”, “Computer Science”);

insert into STUDENT(STUDENT_ID, FIRST_NAME, LAST_NAME, MAJOR)
values(3690, “Mario”, “Qart”, “Computer Science”);


insert into COURSES(COURSE_ID, DEPARTMENT, COURSE_NUMBER, COURSE_NAME, SEMESTER, YEAR)
values(1, “Computer Science”, 321, “Senior Project”, “Fall”, 2021), (2, “English”, 456, “Writing”, “Fall”, 2021), (3, “Biology”, 365, “Intro to Biology”, “Fall”, 2021);



insert into ENROLLMENT(STUDENT_ID, COURSE_ID)
values(1234, 1), (1234, 2), (2468, 2), (2468, 3), (3690, 1), (3690, 2), (3690, 3);



insert into DISTRIBUTION(DISTRIBUTION_ID, COURSE_ID, CATEGORY, DIST_PERCENT)
values(1, 1, “Participation”, 10), (2, 1, “Homework”, 25), (3, 1, “Test”, 45), (4, 1, “Project”, 20);


insert into ASSIGNMENTS(ASSIGNMENT_ID, DISTRIBUTION_ID, INSTANCE, POINTS_POSSIBLE)
values(1, 1, 1, 150), (2, 2, 1, 30), (3, 2, 2, 50), (4, 3, 1 , 100), (5, 3, 2, 120), (6, 4, 1, 50), (7, 4, 2, 50);


insert into GRADEBOOK(STUDENT_ID, ASSIGNMENT_ID, POINTS)
values(1234, 1, 125), (1234, 2, 25), (1234, 3, 40), (1234, 4, 90), (1234, 5, 110), (1234, 6, 44), (1234, 7, 20), (3690, 1, 100), (3690, 2, 30), (3690, 3, 40),(3690, 4, 88), (3690, 5, 115), (3690, 6, 35), (3690, 7, 30);


/* SHOWING TABLES WITH CONTENTS */
SELECT * FROM STUDENT;
SELECT * FROM ENROLLMENT;
SELECT * FROM COURSES;
SELECT * FROM DISTRIBUTION;
SELECT * FROM ASSIGNMENTS;
SELECT * FROM GRADEBOOK;


/* COMPUTE AVG/HIGHEST.LOWEST SCORES FROM ASSIGNMENT */
SELECT avg(POINTS) FROM GRADEBOOK WHERE ASSIGNMENT_ID=”2”;
SELECT max(POINTS) FROM GRADEBOOK WHERE ASSIGNMENT_ID=”2”;
SELECT min(POINTS) FROM GRADEBOOK WHERE ASSIGNMENT_ID=”2”;

/* LIST ALL STUDENT IN GIVEN COURSE*/
SELECT FIRST_NAME, LAST_NAME FROM STUDENT 
WHERE STUDENT_ID IN (
SELECT STUDENT_ID FROM ENROLLMENT 
WHERE COURSE_ID= (
SELECT COURSE_ID FROM COURSES
WHERE COURSE_NAME = “Senior Project”)
);

/* LIST ALL STUDENT IN GIVEN COURSE AND ALL SCORES ON ASSIGNMENTS */
SELECT S.FIRST_NAME, S.LAST_NAME, E.COURSE_ID, G.ASSIGNMENT_ID, G.POINTS 
FROM STUDENT S, ENROLLMENT E, GRADEBOOK G
WHERE S.STUDENT_ID=G.STUDENT_ID AND G.STUDENT_ID=E.STUDENT_ID AND E.COURSE_ID=1;

/* ADD ASSIGNMEMT TO COURSE */
insert into ASSIGNMENTS(ASSIGNMENT_ID, DISTRIBUTION_ID, INSTANCE, POINTS_POSSIBLE) VALUES(3, 1, 10);

/* CHANGE PERCENTAGE OF CATEGORY FOR A COURSE */
UPDATE DISTRIBUTION SET DIST_PERCENT = 10 WHERE CATEGORY = “Participation” AND COURSE_ID = 1;

/* ADD 2 POINTS TO EACH STUDENT SCORE FOR ASSIGNMENT */
UPDATE GRADEBOOK SET POINTS = POINTS + 2 WHERE ASSIGNMENT_ID = 2;


/* ADD 2 POINTS TO STUDENT WHOSE LAST NAME CONTATINS "Q" SCORE FOR ASSIGNMENT */
UPDATE GRADEBOOK
SET POINTS = POINTS + 2
WHERE GRADEBOOK.STUDENT_ID = (SELECT STUDENT_ID FROM STUDENT WHERE GRADEBOOK.STUDENT_ID = STUDENT.STUDENT_ID AND STUDENT.LAST_NAME LIKE ‘%Q%’);

/* COMPUTE GRADE FOR STUDENT */
SELECT SUM((G.POINTS) * (D.DIST_PERCENT/C.COUNTER)/POINTS_POSSIBLE) AS FINAL_GRADE FROM GRADEBOOK G
LEFT JOIN ASSIGNMENTS A ON G.ASSIGNMENT_ID = A.ASSIGNMENT_ID
JOIN DISTRIBUTION D ON D.DISTRIBUTION_ID = A.DISTRIBUTION_ID
JOIN (SELECT D.DISTRIBUTION_ID, COUNT(*) AS COUNTER FROM GRADEBOOK G
LEFT JOIN ASSIGNMENTS A ON G.ASSIGNMENT_ID = A.ASSIGNMENT_ID
JOIN DISTRIBUTION D ON D.DISTRIBUTION_ID = A.DISTRIBUTION_ID
WHERE COURSE_ID=1 AND STUDENT_ID = 1234 GROUP BY D.DISTRIBUTION_ID)
C ON C.DISTRIBUTION_ID = D.DISTRIBUTION_ID
WHERE COURSE_ID = 1 AND STUDENT_ID = 1234;

/* COMPUTE GRADE FOR STUDENT AFTER DROPPING LOWEST GRADE*/
SELECT SUM((G.points) * (D.DIST_PERCENT/C.COUNTER)/POINTS_POSSIBLE) AS FINAL_GRADE FROM GRADEBOOK G
LEFT JOIN ASSIGNMENTS A ON G.ASSIGNMENT_ID = A.ASSIGNMENT_ID
JOIN DISTRIBUTION D ON D.DISTRIBUTION_ID = A.DISTRIBUTION_ID
JOIN (SELECT D.DISTRIBUTION_ID, COUNT(*) AS COUNTER FROM GRADEBOOK G
LEFT JOIN ASSIGNMENTS A ON G.ASSIGNMENT_ID = A.ASSIGNMENT_ID
JOIN DISTRIBUTION D ON D.DISTRIBUTION_ID = A.DISTRIBUTION_ID
WHERE COURSE_ID=1 AND STUDENT_ID=1234 GROUP BY D.DISTRIBUTION_ID)
C ON C.DISTRIBUTION_ID = D.DISTRIBUTION_ID
JOIN (SELECT D.DISTRIBUTION_ID, COUNT(*) AS COUNTER FROM GRADEBOOK G
LEFT JOIN ASSIGNMENTS A ON G.ASSIGNMENT_ID = A.ASSIGNMENT_ID
JOIN DISTRIBUTION D ON D.DISTRIBUTION_ID = A.DISTRIBUTION_ID
WHERE COURSE_ID=1 AND STUDENT_ID=1234 GROUP BY D.DISTRIBUTION_ID)
Z ON Z.DISTRIBUTION_ID = D.DISTRIBUTION_ID
WHERE COURSE_ID=1
AND STUDENT_ID=1234;

